{"version":3,"sources":["webpack:///./src/app/staff/invitations.component.css","webpack:///./src/app/staff/invitations.component.html","webpack:///./src/app/staff/invitations.component.ts","webpack:///./src/app/staff/invitations.service.ts","webpack:///./src/app/staff/staff.module.ts"],"names":[],"mappings":"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","file":"staff-staff-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<mat-card-content>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n       <span><a href=\\\"/\\\">HOME</a></span>\\n       <span class=\\\"spacer\\\"></span>\\n       <a  mat-button  routerLink=\\\"/logout\\\">Logout</a>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  \\n  <form class=\\\"my-form\\\">\\n    <div class=\\\"form-group\\\">\\n      <h2>Invitations</h2>\\n      <table class=\\\"table table-striped\\\">\\n        <tr>\\n          <th scope=\\\"col\\\"> Name </th>\\n          <th scope=\\\"col\\\"> Email </th>\\n          <th scope=\\\"col\\\"> Status </th>\\n        </tr>\\n        <tr *ngFor=\\\"let student of studentInfo\\\">\\n          <td>{{ student.name }}</td>\\n          <td>{{ student.email }}</td>\\n          <td>{{ student.status }}</td>\\n        </tr>\\n      </table>\\n      <mat-card-actions>\\n            <button mat-raised-button (click)=\\\"unhide()\\\" color=\\\"primary\\\">Send New Invitation</button><br/><br/>\\n      </mat-card-actions>\\n        \\n      <mat-card-content>\\n        <form #invitation=\\\"ngForm\\\" class=\\\"my-form\\\">\\n          <div *ngIf=\\\"addApplicant\\\">\\n            <mat-form-field class=\\\"full-width\\\">\\n              <mat-label>Full Name</mat-label>\\n              <input  name=\\\"newName\\\" type=\\\"text\\\" matInput  placeholder=\\\"Full Name\\\"  [(ngModel)] = \\\"newName\\\"  class=\\\"form-control\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"full-width\\\">\\n              <mat-label>Email</mat-label>\\n              <input  name=\\\"newEmail\\\" type=\\\"email\\\" matInput  placeholder=\\\"Email\\\"  [(ngModel)] = \\\"newEmail\\\"  class=\\\"form-control\\\" required>\\n            </mat-form-field>\\n            <mat-card-actions>\\n              <button mat-raised-button [disabled]=\\\"invitation.form.invalid\\\" (click)=\\\"send()\\\" color=\\\"primary\\\">Send</button>\\n            </mat-card-actions>\\n          </div>\\n        </form> \\n      </mat-card-content>\\n    </div>\\n  </form>\\n</mat-card-content>\\n\"","import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { InvitationsService } from './invitations.service';\nimport { Subscription } from 'rxjs';\n\ninterface studentInfo {\n  id: string,\n  name: string,\n  email: string,\n  status: string;\n}\n\n@Component({\n  selector: 'invitations',\n  templateUrl: './invitations.component.html',\n  styleUrls: ['./invitations.component.css']\n})\n\nexport class InvitationsComponent implements OnInit, OnDestroy {\n  \n  newName: string = '';\n  newEmail: string = '';\n  newStatus: string = 'Pending';\n\n  studentInfo;\n  addApplicant: boolean = false;\n\n  private subscription: Subscription;\n\n  constructor(private invitationsService: InvitationsService){\n    this.studentInfo = invitationsService.retrieveInfo();    \n    this.studentInfo = invitationsService.getStudentInfo();\n  }\n\n  ngOnInit(){\n    this.subscription = this.invitationsService.retrieveInfo()\n      .subscribe((data: studentInfo) => {\n        console.log(data); \n      })\n  }\n \n  unhide(){ this.addApplicant = !this.addApplicant; }\n\n  send(){\n    const info = {name: this.newName, email: this.newEmail, status: this.newStatus}\n    console.log(info);\n    this.invitationsService.sendInfo(info)\n      .subscribe(response =>{\n        console.log(response);\n      })\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n\n@Injectable()\nexport class InvitationsService {\n  \n  domain: string = 'http://localhost:3000';\n  constructor(private http: HttpClient) { }\n\n  //For testing\n  studentInfo = [\n    {name: \"Alem Embiale\", email: \"alemwatch@gmail.com\", status: \"Sent\"},\n    {name: \"Silas Kaggwa\", email: \"silas@gmail.com\", status: \"Sent\" },\n    {name: \"Tigist Tadesse\", email: \"tigist@gmail.com\", status: \"Pending\"},\n    \n  ];\n\n  //untile connected to backend\n   getStudentInfo(){\n    return this.studentInfo;\n  }\n\n  retrieveInfo(){\n    //console.log(\"inside retriveInfo\");\n    return this.http.get(this.domain+'/info/');\n  }\n\n  sendInfo(info){\n    this.studentInfo.push(info);\n    return this.http.post(this.domain+'/staff/invite', info);\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {MatNativeDateModule,MatDatepickerModule,MatIconModule,MatButtonModule,MatCheckboxModule, MatCardModule,MatFormFieldModule,MatInputModule,MatRadioModule,MatListModule, MatToolbarModule} from  '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InvitationsComponent } from './invitations.component';\nimport { InvitationsService } from './invitations.service';\n\nexport const STAFF_ROUTES = [\n  {path:'', component: InvitationsComponent}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(STAFF_ROUTES),\n    FormsModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    FormsModule, \n    MatCardModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatListModule,\n    MatRadioModule,\n    MatButtonModule\n  ],\n  providers: [InvitationsService],\n  declarations: [\n    InvitationsComponent\n  ],\n  bootstrap: [InvitationsComponent]\n})\nexport class StaffModule { }\n"],"sourceRoot":""}