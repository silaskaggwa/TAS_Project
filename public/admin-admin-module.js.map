{"version":3,"sources":["webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.guard.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/question.service.ts","webpack:///./src/app/admin/questions.component.html","webpack:///./src/app/admin/questions.component.ts","webpack:///./src/app/admin/review/progress.component.css","webpack:///./src/app/admin/review/progress.component.html","webpack:///./src/app/admin/review/progress.component.ts","webpack:///./src/app/admin/review/review.component.css","webpack:///./src/app/admin/review/review.component.html","webpack:///./src/app/admin/review/review.component.ts","webpack:///./src/app/admin/review/review.service.ts","webpack:///./src/app/admin/user.service.ts","webpack:///./src/app/material.module.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["module.exports = \"table {\\n  width: 100%;\\n}\\nlabel{color:green}\\n.l-container {margin: 20px 10%;}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <a mat-button routerLink=\\\"/admin\\\"><h2>TAS Screening</h2></a>\\n        <span class=\\\"spacer\\\"></span><span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin\\\">Register User</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/questions\\\">Question</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/review\\\">Review</a>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"l-container\\\">\\n    <h2>Add Staff</h2>\\n    <form (ngSubmit)=\\\"createUser(f)\\\" #f=\\\"ngForm\\\" class=\\\"my-form\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Name</mat-label>\\n            <input ngModel name=\\\"fname\\\" #fname=\\\"ngModel\\\" matInput placeholder=\\\"First name\\\" required>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Email</mat-label>\\n            <input ngModel name=\\\"email\\\" #fname=\\\"ngModel\\\" matInput placeholder=\\\"Email\\\" required>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"full-width\\\">\\n            <mat-label>Role</mat-label>\\n            <input ngModel name=\\\"role\\\" #role=\\\"ngModel\\\" matInput placeholder=\\\"role\\\" required>\\n        </mat-form-field>\\n\\n        <mat-card-actions>\\n            <button mat-raised-button color=\\\"primary\\\">SAVE</button>\\n            <button mat-icon-button >\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\n            </button>\\n            <label>{{msg}}</label>\\n        </mat-card-actions>\\n    </form>\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n        </ng-container>\\n\\n        <!-- Email Column -->\\n        <ng-container matColumnDef=\\\"email\\\">\\n            <th mat-header-cell *matHeaderCellDef> Email </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n        </ng-container>\\n\\n        <!-- Status Column -->\\n        <ng-container matColumnDef=\\\"role\\\">\\n            <th mat-header-cell *matHeaderCellDef> Role </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role}} </td>\\n        </ng-container>\\n\\n        <!-- Deactivate Column -->\\n        <ng-container matColumnDef=\\\"status\\\">\\n            <th mat-header-cell *matHeaderCellDef> Status </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                <mat-slide-toggle></mat-slide-toggle>\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from './user.service'\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\n\ninterface User {\n  _id: string,\n  name: string,\n  email: string,\n  role: string,\n  active: boolean\n}\nexport interface PeriodicElement {\n  name: string;\n  email: string;\n  role: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private userService: UserService, public dialog: MatDialog) {\n\n  }\n\n  ngOnInit() {\n    this.getUser()\n  }\n  arr: any[] = [];\n  msg: string;\n  dataSource: User[];\n  openDialog() {\n\n    console.log('tg dialog');\n    // this.dialog.open(AddUserComponent);\n\n  }\n  createUser(form: NgForm) {\n    this.arr = form.value;\n    this.userService.createUser(this.arr)\n      .subscribe(resp => { console.log('resp>>', resp) })\n    this.msg = \"user is saved!\";\n  }\n  getUser() {\n    //console.log('users', this.userService.getUser());\n\n    this.userService.getUser()\n      .subscribe((data:User[]) => {\n        console.log('users data', data);\n        this.dataSource =data;\n      }, err => { console.log('err', err.message) });\n\n  }\n\n  displayedColumns: string[] = ['name', 'email', 'role', 'status'];\n // dataSource = ELEMENT_DATA;\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin.component';\n\nimport { AdminGuard } from './admin.guard';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { MyMaterialModule } from  '../material.module';\nimport { MatRippleModule } from '@angular/material/core';\nimport { QuestionsComponent } from './questions.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ReviewService } from './review/review.service';\nimport { ProgressComponent } from './review/progress.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatChipsModule, MatProgressBarModule } from '@angular/material';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nexport const ADMIN_ROUTES = [\n  {path:'', component: AdminComponent, canActivate: [ AdminGuard ]},\n  {path:'questions', component: QuestionsComponent, canActivate: [ AdminGuard ]},\n  {path:'review', component: ReviewComponent, canActivate: [ AdminGuard ]},\n  {path:'review/:id', component: ProgressComponent, canActivate: [ AdminGuard ]},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MyMaterialModule,\n    MatRippleModule,\n    FlexLayoutModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    RouterModule.forChild(ADMIN_ROUTES)\n    \n  ],\n // entryComponents: [AddUserComponent],\n  declarations: [AdminComponent,QuestionsComponent,ReviewComponent,ProgressComponent],\n  bootstrap: [AdminComponent],\n  providers: [ReviewService]\n})\nexport class AdminModule { }\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class QuestionService {\n\n  domain: string = 'http://localhost:3000';\n  constructor(private http:HttpClient) { }\n\n  addQuestion(data){\n\n      console.log('Question service has data-> :'+JSON.stringify(data));\n      return this.http.post(this.domain+'/admin/questions/create',data);//, { withCredentials: true });\n  }\n\n  getQuestions()\n  {\n    //console.log('hi get question service');\n    return this.http.get(this.domain+'/admin/questions/all');//, { withCredentials: true });\n  }\n \n}","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <a mat-button routerLink=\\\"/admin\\\"><h2>TAS Screening</h2></a>\\n        <span class=\\\"spacer\\\"></span><span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin\\\">Register User</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/questions\\\">Question</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/review\\\">Review</a>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"l-container\\\">\\n    <h2>Add Question</h2>\\n    <form (ngSubmit)=\\\"addQuestion(f)\\\" #f=\\\"ngForm\\\" class=\\\"my-form\\\">\\n        <mat-form-field class=\\\"full-width the-question\\\">\\n            <mat-label>Question</mat-label>\\n            <input ngModel name=\\\"question\\\" #question=\\\"ngModel\\\" matInput placeholder=\\\"Question\\\" required>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"full-width the-qn-status\\\">\\n            <mat-label>Status</mat-label>\\n\\n            <input ngModel name=\\\"active\\\" #active=\\\"ngModel\\\" matInput placeholder=\\\"Email\\\" required>\\n            <!-- <mat-slide-toggle value='true'></mat-slide-toggle>-->\\n        </mat-form-field>\\n        <mat-card-actions>\\n            <button mat-raised-button color=\\\"primary\\\">SAVE</button>\\n            <label>{{msg}}</label>\\n        </mat-card-actions>\\n    </form>\\n\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"question\\\">\\n            <th mat-header-cell *matHeaderCellDef> Question </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.question}} </td>\\n        </ng-container>\\n        <!-- active Column -->\\n        <ng-container matColumnDef=\\\"active\\\">\\n            <th mat-header-cell *matHeaderCellDef> Status </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                <mat-slide-toggle></mat-slide-toggle>\\n            </td>\\n        </ng-container>\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { QuestionService } from './question.service';\nexport interface PeriodicElement {\n  question: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './questions.component.html',\n  styles: [`\n    table {width: 100%;} label{color:green} .l-container {margin: 20px 10%;}\n    .the-question {width: 80%;}\n    .the-qn-status {width: 10%;}\n  `]\n})\nexport class QuestionsComponent implements OnInit {\n  arr: any[] = [];\n  msg: string;\n  dataSource: any[] = [];\n  displayedColumns: string[] = ['question', 'active'];\n  constructor(private questionService: QuestionService) { }\n\n  ngOnInit() {\n    this.getAllQuestions();\n  }\n  addQuestion(form: NgForm) {\n    this.arr = form.value\n    console.log('value', JSON.stringify(form.value));\n    this.questionService.addQuestion(this.arr).subscribe(\n      resp => console.log('resp>>', resp)\n    )\n    this.msg = '  Question is saved!';\n  }\n\n  getAllQuestions(){\n    this.questionService.getQuestions()\n      .subscribe((data: any) => {\n        this.dataSource = data;\n      })\n  }\n  \n  //dataSource = ELEMENT_DATA;\n}\n","module.exports = \".center-content{\\n    display: flex;\\n    align-items: center;\\n}\\n.code-input {\\n    width: 100%;\\n    background: url(http://i.imgur.com/2cOaJ.png);\\n    background-attachment: local;\\n    background-repeat: no-repeat;\\n    padding-left: 35px;\\n    padding-top: 10px;\\n    font-family: monospace;\\n    box-sizing: border-box;\\n    color: #982b2b !important;\\n    border: 1px solid gray !important;\\n    height: 450px !important;\\n}\\n.qn-answer {\\n    margin: 20px 10%;\\n}\\n.fab-container {\\n    display: inline;\\n    box-sizing: border-box;\\n    overflow: auto;\\n    position: fixed;\\n    bottom: 30px;\\n    padding: 10px;\\n}\\n.fab-container.right {\\n    right: 30px;\\n}\\n.fab-container.left {\\n    left: 30px;\\n}\\n.fab-container .with-time{\\n    font-size: 14px;\\n}\\n.fab-container button {\\n    display: block;\\n    margin-top: 10px;\\n}\\n.user-info {\\n    margin: 10px 0 30px;\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <a mat-button routerLink=\\\"/admin\\\"><h2>TAS Screening</h2></a>\\n        <span class=\\\"spacer\\\"></span><span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin\\\">Register User</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/questions\\\">Question</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/review\\\">Review</a>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"qn-answer\\\">\\n    {{currentQuestion.question}}\\n    <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"center\\\">\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"goToQuestion(numCurrQuestion-1)\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_back_ios</mat-icon>\\n        </button>\\n        <span class=\\\"spacer\\\"></span>\\n        <span class=\\\"center-content\\\">\\n            <mat-chip color=\\\"primary\\\">{{numCurrQuestion}} / {{numQuestions}}</mat-chip>\\n        </span>\\n        <span class=\\\"spacer\\\"></span>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"goToQuestion(numCurrQuestion+1)\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_forward_ios</mat-icon>\\n        </button>\\n    </div>\\n    <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"center\\\">\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"goToSnapshot(numCurrSnapshot-1)\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_back_ios</mat-icon>\\n        </button>\\n        <span class=\\\"spacer\\\"></span>\\n        <span class=\\\"center-content\\\">\\n            <mat-chip color=\\\"primary\\\">{{numCurrSnapshot}} / {{numProgresses}}</mat-chip>\\n        </span>\\n        <span class=\\\"spacer\\\"></span>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"goToSnapshot(numCurrSnapshot+1)\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_forward_ios</mat-icon>\\n        </button>\\n    </div>\\n    <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"show_loader\\\"></mat-progress-bar>\\n    <div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"20px\\\" fxLayoutAlign=\\\"center\\\">\\n        <textarea matInput class=\\\"code-input\\\" rows=\\\"35\\\" [disabled]=\\\"true\\\">{{currentSnapshot.text}}</textarea>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" class=\\\"user-info\\\">\\n        <mat-chip-list>\\n            <mat-chip color=\\\"primary\\\" selected>\\n                <mat-icon>person</mat-icon>\\n                {{reviewData.name}}\\n            </mat-chip>\\n            <mat-chip color=\\\"accent\\\" selected>\\n                <mat-icon>email</mat-icon>\\n                {{reviewData.email}}\\n            </mat-chip>\\n            <mat-chip color=\\\"warn\\\" selected>\\n                <mat-icon>timer</mat-icon>\\n                {{reviewData.time_used}}\\n            </mat-chip>\\n        </mat-chip-list>\\n    </div>\\n</div>\\n<div class=\\\"fab-container right\\\">\\n    <button mat-fab color=\\\"primary\\\" (click)=\\\"setPass(true)\\\"><mat-icon>check</mat-icon></button>\\n    <button mat-fab color=\\\"warn\\\" (click)=\\\"setPass(false)\\\"><mat-icon>close</mat-icon></button>\\n</div>\\n<div class=\\\"fab-container left\\\">\\n    <button mat-fab color=\\\"primary\\\">{{numCurrQuestion}}</button>\\n    <button mat-fab color=\\\"primary\\\"><mat-icon class=\\\"with-time\\\">timer</mat-icon>{{currentQuestion.duration}}</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ReviewService } from './review.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarConfig} from '@angular/material';\n\ninterface Snapshot {\n    text: string\n}\n\ninterface Question {\n    question: string,\n    progress: Snapshot[] \n}\n\ninterface ReviewData{\n\t_id: string,\n    email: string,\n    name: string,\n\tstarted_at: string,\n    submitted_at: string,\n    questions: Question[]\n}\n\ninterface Status {\n    status: string\n}\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.css'],\n})\nexport class ProgressComponent implements OnInit {\n\n    private show_loader = false;\n    private invitationId: string;\n\n    private reviewData: ReviewData = {\n        _id: '',\n        email: '',\n        name: '',\n        started_at: '',\n        submitted_at: '',\n        questions: []\n    };\n    private numQuestions: number = 0;\n    private numProgresses: number = 0;\n    private numCurrSnapshot: number = 0;\n    private numCurrQuestion: number = 0;\n    private currentQuestion: Question = {question: '', progress: []};\n    private currentSnapshot: Snapshot = {text: ''};\n\n\tconstructor(private service: ReviewService, private route: ActivatedRoute, private snackBar: MatSnackBar, private router: Router) {\n        this.route.params.subscribe( params => {\n            this.invitationId = params['id'];\n        });\n    }\n\n    openSnackBar() {\n        let config = new MatSnackBarConfig();\n        config.verticalPosition = 'bottom';\n        config.horizontalPosition = 'center';\n        config.duration = 2000;\n        //config.extraClasses = this.addExtraClass ? ['test'] : undefined;\n        this.snackBar.open('Review successful !', 'OK', config);\n    }\n\n    ngOnInit() {\n        this.loadSubmission();\n    }\n\n    goToQuestion(n){\n        const index = n-1;\n        if(index >= 0 && index < this.numQuestions){\n            this.numCurrQuestion = n;\n            this.currentQuestion = this.reviewData.questions[index];\n            this.numProgresses = this.currentQuestion.progress.length;\n            if(this.currentQuestion.progress && this.numProgresses > 0){\n                this.numCurrSnapshot = this.numProgresses;\n                this.currentSnapshot = this.currentQuestion.progress[this.numCurrSnapshot - 1];\n            }\n        }\n    }\n\n    goToSnapshot(n){\n        const index = n-1;\n        if(index >= 0 && index < this.currentQuestion.progress.length){\n            this.numCurrSnapshot = n;\n            this.currentSnapshot = this.currentQuestion.progress[index];\n        }\n    }\n\n\tloadSubmission(){\n        console.log(\"getSub>>\", this.invitationId);\n        this.show_loader = true;\n\t\tthis.service.getSubmission(this.invitationId)\n\t\t\t.subscribe(\n\t\t\t\t(data: ReviewData) => {\n                    console.log('db>> ', data.questions);\n                    this.show_loader = false;\n                    this.reviewData = data;\n                    if(data.questions && data.questions.length > 0){\n                        this.numCurrQuestion = 1;\n                        this.numQuestions = data.questions.length\n                        this.currentQuestion = data.questions[0];\n\n                        if(this.currentQuestion.progress && this.currentQuestion.progress.length > 0){\n                            this.numProgresses = this.currentQuestion.progress.length;\n                            this.numCurrSnapshot = this.numProgresses; \n                            this.currentSnapshot = this.currentQuestion.progress[this.numCurrSnapshot - 1];\n                        }\n                    }\n\t\t\t\t}\n\t\t\t);\n    }\n    \n    setPass(pass: boolean){\n        this.show_loader = true;\n        this.service.setPass(this.invitationId, pass)\n            .subscribe(\n                (info) => {\n                    //this.show_loader = false;\n                    this.openSnackBar();\n                    setTimeout(()=>{\n                        this.router.navigate(['/admin/review']);\n                    },1500);\n                }\n            )\n    }\n\n}\n","module.exports = \".review_row{\\n    cursor: pointer;\\n    user-select: none;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n\\n    -webkit-user-drag: none;\\n    -webkit-tap-highlight-color: transparent;\\n}\\n.mat-table {\\n    width: 100%;\\n}\\n.l-container {\\n    margin: 20px 10%;\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <a mat-button routerLink=\\\"/admin\\\"><h2>TAS Screening</h2></a>\\n        <span class=\\\"spacer\\\"></span><span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin\\\">Register User</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/questions\\\">Question</a>\\n        <span class=\\\"spacer\\\"></span>\\n        <a mat-button routerLink=\\\"/admin/review\\\">Review</a>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"l-container\\\">\\n    <mat-card-content>\\n        <table mat-table [dataSource]=\\\"reviewList\\\" class=\\\"mat-elevation-z8\\\">\\n        \\n            <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef> Email </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n            </ng-container>\\n            \\n            <ng-container matColumnDef=\\\"started_at\\\">\\n                <th mat-header-cell *matHeaderCellDef> Started </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.started_at}} </td>\\n            </ng-container>\\n            \\n            <ng-container matColumnDef=\\\"submitted_at\\\">\\n                <th mat-header-cell *matHeaderCellDef> Submitted </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.submitted_at}} </td>\\n            </ng-container>\\n        \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr \\n                matRipple\\n                [matRippleCentered]=\\\"false\\\"\\n                [matRippleDisabled]=\\\"false\\\"\\n                [matRippleUnbounded]=\\\"true\\\"\\n                mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" \\n                class=\\\"review_row\\\" \\n                (click)=\\\"loadSubmission(row)\\\">\\n            </tr>\\n        </table>\\n    </mat-card-content>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ReviewService } from './review.service';\nimport { Router } from '@angular/router';\n\nexport interface Submission{\n\t_id: string,\n\temail: string,\n\tstarted_at: string,\n\tsubmitted_at: string\n}\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n\n\tprivate reviewList: Submission[] = [];\n\n\tdisplayedColumns: string[] = ['email', 'started_at', 'submitted_at'];\n\tconstructor(private service: ReviewService, private router: Router) { }\n\n  ngOnInit() {\n\t\tthis.loadAllSubmission();\n  }\n\n\tloadSubmission(submission: Submission){\n\t\tconsole.log(\"row>>\", submission);\n\t\tthis.router.navigate(['/admin/review/'+submission._id]);\n\t}\n  loadAllSubmission(){\n\t\tthis.service.getSubmissions()\n\t\t\t.subscribe(\n\t\t\t\t(data: Submission[]) => {\n\t\t\t\t\tconsole.log('db>> ', data);\n\t\t\t\t\tthis.reviewList = data;\n\t\t\t\t}\n\t\t\t);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class ReviewService {\n\n  domain: string = 'http://localhost:3000';\n  constructor(private http:HttpClient) { }\n\n  getSubmissions(){\n    return this.http.get(this.domain+'/admin/submissions');//, { withCredentials: true });\n  }\n\n  getSubmission(invitatation_id){\n    return this.http.get(this.domain+'/admin/submissions/'+invitatation_id);//, { withCredentials: true });\n  }\n\n  setPass(invitatation_id, pass: boolean){\n    return this.http.post(this.domain+'/admin/submissions/'+invitatation_id, {pass});\n  }\n \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class UserService {\n\n  domain: string = 'http://localhost:3000';\n  constructor(private http:HttpClient) { }\n\n  createUser(data){\n\n      console.log('service has data-> :'+JSON.stringify(data));\n      return this.http.post(this.domain+'/admin/user/create',data);//, { withCredentials: true });\n  }\n\n  getUser()\n  {\n    \n    return this.http.get(this.domain+'/admin/user');//, { withCredentials: true });\n  }\n \n}","import { NgModule } from  '@angular/core';\nimport {MatNativeDateModule,MatIconModule,\n    MatButtonModule,MatCheckboxModule, MatToolbarModule, \n    MatCardModule,MatFormFieldModule,MatDialogModule,MatSlideToggleModule, MatInputModule,MatRadioModule,MatListModule,MatGridListModule,MatTableModule} \n    from  '@angular/material';\nimport {MatDatepickerModule} from  '@angular/material/datepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n \n@NgModule({\nimports: [MatNativeDateModule,MatDatepickerModule,MatIconModule,MatButtonModule,MatCheckboxModule, MatToolbarModule,FormsModule, MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatRadioModule,],\n \nexports: [MatNativeDateModule,FormsModule,\nMatDatepickerModule,MatGridListModule,MatIconModule,MatDialogModule,MatSlideToggleModule,MatTableModule,MatButtonModule,MatCheckboxModule, MatToolbarModule, MatCardModule,MatFormFieldModule,MatInputModule,MatListModule,MatRadioModule,],\n \n})\n \nexport  class  MyMaterialModule { }"],"sourceRoot":""}